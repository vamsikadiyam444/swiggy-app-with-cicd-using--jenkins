pipeline {
    agent any

    environment {
        // Image name and tag
        DOCKER_IMAGE = 'chakri45446/swiggy-app'
        DOCKER_TAG = 'latest'

        // DockerHub Credentials ID from Jenkins Credentials
        REGISTRY_CREDENTIALS = 'dockerhub-credentials-id'
    }

    stages {

        stage('Install Dependencies') {
            steps {
                echo 'Installing NPM dependencies...'
                sh 'npm install'
            }
        }

        stage('Build React App') {
            steps {
                echo 'Building the React app using Parcel...'
                sh 'npm run build'
            }
        }

        stage('Run Tests') {
            steps {
                echo 'Running unit tests using Jest...'
                sh 'npm run test'
            }
        }

        stage('Docker Build') {
            steps {
                echo 'Building Docker image...'
                sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} ."
            }
        }

        stage('Docker Run') {
            steps {
                echo 'Running Docker container for test or preview...'
                // Stop and remove previous container if exists
                sh "docker rm -f swiggy-container || true"
                // Run new container on port 1234 (change if needed)
                sh "docker run -d --name swiggy-container -p 1234:1234 ${DOCKER_IMAGE}:${DOCKER_TAG}"
            }
        }

        stage('Docker Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: "${REGISTRY_CREDENTIALS}",
                    usernameVariable: 'DOCKER_USER',
                    passwordVariable: 'DOCKER_PASS'
                )]) {
                    script {
                        echo 'Logging in and pushing Docker image to Docker Hub...'
                        sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                        sh "docker push ${DOCKER_IMAGE}:${DOCKER_TAG}"
                    }
                }
            }
        }

        // Optional: Add deployment stage here (EC2, Render, etc.)
    }

    post {
        always {
            echo 'Cleaning up...'
            // Stop container if still running
            sh "docker rm -f swiggy-container || true"
        }
        success {
            echo '✅ Pipeline completed successfully.'
        }
        failure {
            echo '❌ Pipeline failed.'
        }
    }
}
